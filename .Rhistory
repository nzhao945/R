geom_point(aes(x = mtcars$hp, y = mtcars$disp), color = "green")
ggplot()+
geom_point(aes(x = hp, y = mpg), data = mtcars, color = "red")+
geom_point(aes(x = mtcars$hp, y = mtcars$disp), color = "green")+
#选用向量数据
geom_point(aes(x = hp, y= mpg), data = mtcars.c, color = "blue")
ggplot()+
geom_point(aes(x = mtcars$hp, y = mtcars$disp), color = "green")
ggplot()+
geom_point(aes(x = mtcars$hp, y = mtcars$disp, color = "green"))
ggplot()+
geom_point(aes(x = mtcars$hp, y = mtcars$disp), color = "green")
ggplot(data=mtcars,aes(color = factor(cyl)))+
geom_point(aes(x = mtcars$hp, y = mtcars$disp))
help("mtcars")
ggplot(data=mtcars,aes(color = factor(hp)))+
geom_point(aes(x = mtcars$hp, y = mtcars$disp))
View(mtcars)
ggplot(aes(col=factor(cyl)))+
geom_point(aes(x = hp, y = mpg), data = mtcars, color = "red")
ggplot(aes(col=factor(cyl)))+
geom_point(aes(x = hp, y = mpg), data = mtcars)
ggplot(aes(col=factor(cyl)))
ggplot(data=mtcars,aes(col=factor(cyl)))+
geom_point(aes(x = hp, y = mpg), data = mtcars)
ggplot(data=mtcars,aes(col=factor(cyl)))+
geom_point(aes(x = hp, y = mpg,alpha=qsec), data = mtcars)
ggplot(data=mtcars,aes(col=factor(cyl)))+
geom_point(aes(x = hp, y = mpg,shape=factor(gear)), data = mtcars)
ggplot(mtcars, aes(wt, mpg))+
geom_point(color = "grey50", size = 5)
ggplot(mtcars, aes(wt, mpg))+
geom_point(color = "grey50", size = 5) +
geom_point(aes(color = qsec), size = 4)
movies
A <- c(1, 2, 3, 4, 5, 6, 7, 8)
B <- c(2, 10, 11, 5, 6, 1, 10, 20)
ggplot() + geom_histogram(aes(x = A, y = B))
ggplot() + geom_histogram(aes(x = A, y = B), stat = "identity")
rm(A,B)
ggplot(mtcars,mapping=aes(mpg,wt,col=factor(cyl)))+
geom_point()
ggplot(mtcars,mapping=aes(mpg,wt,col=cyl))+
geom_point()
ggplot(mtcars,mapping=aes(mpg,wt,col=factor(cyl)))+
geom_point()
ggplot(data=mtcars)+
geom_point(aes(x = hp, y = mpg), data = mtcars,col=cyl)
ggplot(data=mtcars)+
geom_point(aes(x = hp, y = mpg), data = mtcars,col=cyl)+
geom_smooth()
ggplot(data=mtcars,aes(x = hp, y = mpg),)+
geom_point( data = mtcars,col=cyl)+
geom_smooth()
ggplot(data=mtcars,aes(x = hp, y = mpg,col=cyl))+
geom_point( data = mtcars)+
geom_smooth()
ggplot(data=mtcars,aes(x = hp, y = mpg,col=cyl))+
geom_point( data = mtcars)+
stat_smooth()
ggplot(data=mtcars,aes(x = hp, y = mpg,col=cyl))+
geom_point( data = mtcars)+
stat_smooth(level = .99)
ggplot(data=mtcars,aes(x = hp, y = mpg,col=cyl))+
geom_point( data = mtcars)+
stat_smooth(level = .9)
ggplot(data=mtcars,aes(x = hp, y = mpg,col=cyl))+
geom_point( data = mtcars)+
stat_smooth(level = .9,method = "gam")
help("poly")
?require
UseMethod("median")
methods(median)
median.default
methods(print)
methods(ggplot2)
methods(ggplot)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(alpha = year))
library(ggplot2)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(alpha = year))
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(alpha = year)) + scale_alpha("cylinders")
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(alpha = year))+ scale_alpha(range = c(0.4, 0.8))
ggplot()+
geom_point(aes(x = hp, y = mpg), data = mtcars, color = factor(cyl))
test <- 0
for(i in 1:9){
j <- i+2
test[i+1] <- test[i]+3
k <- i
}
k
test
i
test <- 0
test
test+3
test[2]+3
rm(i,j,k,test)
source('G:/R/RfuntionTrial/ggplot2-training.R', encoding = 'UTF-8')
source('G:/R/RfuntionTrial/ggplot2-training.R', encoding = 'UTF-8')
a <- ggplot(mtcars, aes(factor(cyl)))
a + geom_bar()
a + geom_bar(aes(fill = factor(cyl)))
rm(a)
gc()
mtcars[cyl>4,]
str(mtcars)
mtcars[which(cyl>4),]
which(LETTERS == "R")
head(mtcars[which(cyl=4)])
head(mtcars[which(cyl==4)])
mtcars[which(cyl==4)]
mtcars[which(cyl==4),]
mtcars[which(mtcars$cyl==4),]
mtcars[cyl=4]
mtcars[cyl==4]
mtcars[cyl==4,]
mtcars_dt[cyl==4]
library(data.table)
mtcars_dt[cyl==4]
class(mtcars)
mtcars[cyl=4,]
mtcars[cyl==4,]
mtcars[cyl==4]
mtcars[cyl=4]
mtcars[mtcars$cyl=4]
mtcars[mtcars$cyl==4]
mtcars[mtcars$cyl==4,]
ggplot(data=mtcars,aes(col=factor(cyl)))+
geom_point(aes(x = hp, y = mpg,shape=factor(gear)), data = mtcars)+
geom_abline()
ggplot(data=mtcars,aes(col=factor(cyl)))+
geom_point(aes(x = hp, y = mpg,shape=factor(gear)), data = mtcars)+
geom_line()
ggplot(data=mtcars,aes(col=factor(cyl)))+
geom_point(aes(x = hp, y = mpg,shape=factor(gear)), data = mtcars)+
geom_line()
ggplot(data=mtcars,aes(col=factor(cyl)))+
geom_point(aes(x = hp, y = mpg,shape=factor(gear)), data = mtcars)+
geom_abline()
ggplot(data=mtcars,aes(col=factor(cyl)))+
geom_line(aes(x = hp, y = mpg,shape=factor(gear)), data = mtcars)
class(mtcars)
search()
mode(mtcars)
mode(mtcars$cyl)
?strsplit
x <- c(as = "asfef", qu = "qwerty", "yuiop[", "b", "stuff.blah.yech")
x
View(x)
colnames(x)
strsplit(x,"e")
strsplit(x,"e",fixed = T)
strsplit(x,"")
x <- c("c85","a23","c84")
strsplit(x)
strsplit(x,"")
strsplit(x,"")[[1]][1]
strsplit(x,"")[[2]][1]
mtcars_dt[cyl==4]
mtcars_dt[cyl==4,]
mtcars_dt[cyl=4,]
mtcars[cyl==4,]
mtcars[mtcars$cyl==4,]
mtcars[mtcars$cyl=4,]
mtcars_dt[mtcars_dt$cyl==4,]
names(mtcars)
rownames(mtcars)
colnames(mtcars)
all.equal(names(mtcars),colnames(mtcars))
paste(letters[1:6],1:6,sep="-")
paste("abc", "efg", "hijk", sep = "-",collapse = ";")
paste(c("abc", "efg", "hijk"),1:3, sep = "-",collapse = ";")
x <-rnorm(10,10,1)
y <-rnorm(10,11,1)
cat (sprintf("x has %d elements:\n", length(x)))
x
print(x)
sprintf("x has %d elements:\n", length(x))
rm(x,y)
mtcars[which(cyl>4)]
mtcars[which(cyl>4),]
mtcars[which(mtcars$cyl>4)]
mtcars[which(mtcars$cyl>4),]
mtcars[cyl==4,]
mtcars[cyl=4,]
mtcars[cyl=4]
mtcars[cyl==4]
library(data.table)
fread(header = T,stringsAsFactors = F,input = "train.csv")
fread(header = T,stringsAsFactors = F,file = "G:\R\kaggle_data\Titanic Machine Learning from Disaster\train.csv")
fread(header = T,stringsAsFactors = F,file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/train.csv")
titanic_train <- fread(header = T,stringsAsFactors = F,file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/train.csv")
str(titanic_train)
class(titanic_train)
titanic_test <- fread(header = T,stringsAsFactors = F,file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/test.csv")
rm(mtcars.c)
rm(mymatrix)
rm(p,tmp,dt)
library(ggplot2)
rm(mpg)
View(titanic_test)
str(titanic_train)
View(titanic_test)
View(titanic_train)
gc()
str(titanic_train)
str(titanic_test)
library(randomForest)
train <- fread(header = T,stringsAsFactors = F,
file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/train.csv")
test <- fread(header = T,stringsAsFactors = F,
file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/test.csv")
library(data.table)
train <- fread(header = T,stringsAsFactors = F,
file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/train.csv")
test <- fread(header = T,stringsAsFactors = F,
file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/test.csv")
rm(titanic_test,titare)
rm(titanic_test,titanic_train)
is.na(train)
table(names(train),is.na(train))
View(test)
View(train)
is.null(train)
dim(train)
complete.cases(train)
library(mice)
md.pattern(train)
md.pattern(train)
is.na(train$Age)
sum(is.na(train$Age))
md.pattern(train)
sum(is.na(train$Sex))
sum(is.na(train$Parch))
train[c(62, 830), 'Fare']
train[c(62, 830), 'Fare'][1]
train[c(62, 830), 'Fare'][[1]][1]
train[c(62, 830), 'Fare'][[1]]
library(ggplot2)
ggplot(train,aes(sex,survived))
ggplot(train,aes(Sex,Survived))
library(dplyr)
train %>% group_by(Sex) %>% mutate(Survival_ratio=sum(Survived)/nrow(Survived)) %>%
ggplot(aes(sex,Survival_ratio))+geom_bar()
sum(train$Survived)
nrow(train$Survived)
train %>% group_by(Sex) %>% mutate(Survival_ratio=sum(Survived)/length(Survived)) %>%
ggplot(aes(sex,Survival_ratio))+geom_bar()
train %>% group_by(Sex) %>% mutate(Survival_ratio=sum(Survived)/length(Survived)) %>%
ggplot(aes(Sex,Survival_ratio))+geom_bar()
train %>% group_by(Sex) %>% mutate(Survival_ratio=sum(Survived)/length(Survived)) %>%
ggplot(aes(Sex\))+geom_bar()
train %>% group_by(Sex) %>% mutate(Survival_ratio=sum(Survived)/length(Survived)) %>%
ggplot(aes(Sex))+geom_bar()
train %>% group_by(Sex) %>% mutate(Survival_ratio=sum(Survived)/length(Survived)) %>%
ggplot(aes(Survival_ratio))+geom_bar()
View(train)
test$Survived <- NA
comb <- rbind(train,test)
View(comb)
library(mice)
md.pattern(train)
md.pattern(as.matrix(train))
md.pattern(train$Cabin)
nrow(is.na(train$Cabin))
nrow(!is.na(train$Cabin))
sum(is.na(train$Cabin))
is.na(head(train$Cabin,20))
sum(train$Cabin)
str(train$Cabin)
nrow(train$Cabin[train$Cabin==""])
train$Cabin[train$Cabin==""]
train$Cabin[train$Cabin]
library(data.table)
train[Cabin='']
train[Cabin=""]
train[Cabin==""]
nrow(train[Cabin==""])
nrow(train)
nrow(train[Cabin!=""])
View(train[Cabin==""])
md.pattern(train[,list(PassengerId,Cabin)])
md.pattern(train[,c("PassengerId","Cabin")])
class(train[,c("PassengerId","Cabin"))
class(train[,c("PassengerId","Cabin")])
nrow(train[Cabin==" "])
nrow(train[Cabin==""])
nrow(train[Cabin %in% " "])
nrow(train[Cabin %in% ""])
train[Cabin==""] <- NA
View(train)
train <- fread(header = T,stringsAsFactors = F,
file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/train.csv")
train$Cabin[Cabin==""] <- NA
train[Cabin=="",list(Cabin)] <- NA
train[,list(Cabin)]
train[Cabin=="",list(Cabin)]
train[Cabin=="",list(Cabin)] <- NA
train[train$Cabin=="",Cabin]
train[train$Cabin=="",Cabin] <- NA
train[train$Cabin=="",train$Cabin] <- NA
train[train$Cabin=="",train$Cabin]
train[,Cabin==""]
train[,train$Cabin==""]
View(train)
View(tuk)
nrow(train[Cabin==""])
train$Cabin[train$Cabin==""] <- NA
View(train)
md.pattern(train)
is.null(train$Cabin)
is.na(train$Cabin)
md.pattern(train)
is.na(train$Name)
train <- fread(header = T,stringsAsFactors = F,
file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/train.csv")
test <- fread(header = T,stringsAsFactors = F,
file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/test.csv")
test$Survived <- NA
comb <- rbind(train,test)
sum(is.na(train$Cabin))
sum(is.na(train$Name))
sum(is.na(train$Age))
train$Cabin[train$Cabin==""] <- NA
sum(is.na(train$Cabin))
687/891
sum(is.na(train$Fare))
sum(is.na(train$Embarked))
library(dplyr)
rm(comb)
# 合并train和test
comb <- rbind(train,test)
View(comb)
summary(train)
glimpse(train)
str(train)
train <- train %>% mutate(Survived = factor(Survived),Pclass = factor(Pclass),
Embarked = factor(Embarked),Sex = factor(Sex))
test <- test %>% mutate(Pclass = factor(Pclass),Embarked = factor(Embarked),Sex = factor(Sex))
# 合并train和test,test中不存在的列Survived会自动生成NA
comb <- rbind(train,test)
aggr(comb, prop = FALSE, combined = TRUE, numbers = TRUE, sortVars = TRUE, sortCombs = TRUE)
md.pattern(test)
md.pattern(train)
md.pattern(test)
md.pattern(comb)
view
View(nhanes)
ggplot(train, aes(Pclass, Fare, colour = Survived)) +
geom_boxplot() +
ggplot(train, aes(Pclass, Fare, colour = Survived)) +
geom_boxplot()
library(ggplot2)
ggplot(train, aes(Pclass, Fare, colour = Survived)) +
geom_boxplot()
ggplot(train, aes(Pclass, log10(Fare), colour = Survived)) +
geom_boxplot()
ggplot(train, aes(Pclass, Fare, colour = Survived)) +
geom_boxplot() + scale_y_log10()
library(data.table)
str(comb)
setDT(comb)
str(comb)
comb[is.na(Embarked)]
comb[is.na(Embarked),]
comb[is.na(Embarked)][]
comb[is.na(Embarked)][[]]
comb[is.na(Embarked)][][]
comb[,comb$Embarked==NA]
comb[,is.na(comb$Embarked)]
comb[is.na(comb$Embarked),]
is.na(comb$Embarked)
library(dplyr)
filter(comb,is.na(Embarked))
View(comb)
train <- fread(header = T,stringsAsFactors = F,na.strings = "NA"
file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/train.csv")
#导入训练集和测试集
train <- fread(header = T,stringsAsFactors = F,na.strings = "NA",
file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/train.csv")
View(train)
View(train)
train$Embarked <- factor(train$Embarked)
View(train)
sum(is.na(train$Embarked))
sum(train[Embarked==""])
sum(train[Embarked=="",])
train[Age==NA]
train[Age==NA,]
train[Age=NA]
train[Age=19]
train[Age==19]
train[Age=="NA"]
train[Age==NA]
train[is.na(Age)]
train[Embarked==""]
train[""]
train[1==""]
train$Embarked[Embarked==""]
train$Embarked[""]
train$Embarked[train$Embarked=""]
train$Embarked[train$Embarked="",]
train$Embarked[train$Embarked=="",]
train$Embarked[train$Embarked==""]
train$Embarked[train$Embarked=="C"]
train$Embarked[train$Embarked==""] <- NA
sum(is.na(train$Embarked))
tmp <- read_csv('G:/R/kaggle_data/Titanic Machine Learning from Disaster/test.csv')
tmp <- read.csv('G:/R/kaggle_data/Titanic Machine Learning from Disaster/test.csv')
View(tmp)
sum(is.na(tmp$Embarked))
tmp <- read.csv('G:/R/kaggle_data/Titanic Machine Learning from Disaster/train.csv')
sum(is.na(tmp$Embarked))
rm(tmp)
#导入训练集和测试集
train <- fread(header = T,
file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/train.csv")
View(train)
library(mice)
library(ggplot2)
train <- fread(header = T,stringsAsFactors = F,
file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/train.csv")
View(train)
train$Cabin[train$Cabin==""] <- NA
View(train)
# 发现部分缺失值并没有被读取为NA，而是""，所以作如下操作
train$Embarked[train$Embarked==""] <- NA
sum(is.na(train$Embarked))
md.pattern(train)
library(VIM)
aggr(train)
aggr(train,numbers=T)
aggr(train, prop = F)
aggr(train, prop = F, combined = T)
aggr(train, prop = F, axes=T
)
aggr(train, prop = F, number = T)
# 合并train和test,test中不存在的列Survived会自动生成NA
comb <- rbind(train,test)
aggr(comb, prop = FALSE, combined = TRUE, numbers = TRUE, sortVars = TRUE, sortCombs = TRUE)
train <- fread(header = T,stringsAsFactors = F,
file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/train.csv")
test <- fread(header = T,stringsAsFactors = F,
file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/test.csv")
# 合并train和test,test中不存在的列Survived会自动生成NA
comb <- rbind(train,test)
aggr(comb, prop = FALSE, combined = TRUE, numbers = TRUE, sortVars = TRUE, sortCombs = TRUE)
View(comb)
View(test)
# 合并train和test,test中不存在的列Survived会自动生成NA
comb <- rbind(train,test)
View(comb)
rm(comb)
# 合并train和test,test中不存在的列Survived会自动生成NA
comb <- rbind(train,test)
# 合并train和test,test中不存在的列Survived会自动生成NA
comb <- rbind(train,test)
?rbind
# 合并train和test,test中不存在的列Survived会自动生成NA
comb <- rbind(train,test,fill=NA)
# 合并train和test,test中不存在的列Survived会自动生成NA
comb <- rbind(train,test,fill=T)
view(comb)
view(comb)
View(comb)
aggr(combine, prop = FALSE, combined = TRUE, numbers = TRUE, sortVars = TRUE, sortCombs = TRUE)
aggr(comb, prop = FALSE, combined = TRUE, numbers = TRUE, sortVars = TRUE, sortCombs = TRUE)
?rbind
comb$Embarked[comb$Embarked==""] <- NA
comb$Cabin[comb$Cabin==""] <- NA
sum(nrow(comb$Pclass[comb$Pclass==""]))
sum(nrow(comb$Sex[comb$Sex==""]))
sum(nrow(comb$Fare[comb$Fare==""]))
sum(nrow(comb$Ticket[comb$Ticket==""]))
sum(nrow(comb$Embarked[comb$Ticket==""]))
sum(nrow(comb$Embarked[comb$Embarked==""]))
#缺失值可视化
aggr(comb, prop = FALSE, combined = TRUE, numbers = TRUE, sortVars = TRUE, sortCombs = TRUE)
md.pattern(trian)
md.pattern(train)
comb %>%
filter(Embarked != "Q" & Pclass == 1 & Sex == "female") %>%
group_by(Embarked, Pclass, Sex, Pclass, Parch, SibSp) %>%
summarise(count = n())
md.pattern(comb)
train[is.na(Embarked)]
train[Embarked==NA]
train[Embarked=NA]
train[train$Embarked==NA,]
train[train$Embarked=NA,]
train[is.na(train$Embarked),]
filter(train,is.na(Embarked))
sum(is.na(trian$emba))
sum(is.na(train$Embarked))
train$Embarked[train$Embarked==""] <- NA
train$Cabin[train$Cabin==""] <- NA
# 合并train和test,test中不存在的列Survived由参数fill=T生成NA
comb <- rbind(train,test, fill = T)
sum(is.na(train$Embarked))
train %>% filter(is.na(Embarked))
#缺失值可视化
aggr(train, prop = FALSE, combined = TRUE, numbers = TRUE, sortVars = TRUE, sortCombs = TRUE)
sum(is.na(train$Cabin))
md.pattern(train)
View(train)
sum(is.na(train$Embarked))
train %>% filter(is.na(Embarked))
