plotmeans(response~trt)
detach(cholesterol)
？anova
?anova
?anova
?Anova
??Anova
?TukeyHSD\
?TukeyHSD
search()
fit
TukeyHSD(fit)
fit$model
?par
par(las=2)
par(mar=c(5,8,4,2))
plogis(TukeyHSD(fit))
plog(TukeyHSD(fit))
plot(TukeyHSD(fit))
par(mar=c(5,10,4,2))
plot(TukeyHSD(fit))
par(mar=c(5,4,4,2))
plot(TukeyHSD(fit))
library(multcomp)
?TukeyHSD
par(mar=c(5,4,6,2))
?glht
tuk <-glht(fit,linfct=mcp(trt="Tukey"))
tuk
tuk
?qqplot
library(car)
bartlett.test(response~trt,data = cholesterol)
?cholesterol
??cholesterol
library(multcomp)
bartlett.test(response~trt,data = cholesterol)
data(package="car")
detach("package::car")
search()
detach("package:car")
search
search()
library(car)
outlierTest()
outlierTest(fit)
plot(outlierTest(fit))
getwd()
getwd()
install.packages("StableEstim")
library(car)
??car
?car
data(litter,package = "multcomp")
?data
View(relweights)
attach(litter)
litter
head(litter)
tail(litter)
fit<-aov(weight~gesttime+dose)
fit
summary(fit)
?glht
??glht
help(glht)
rbing
?rbind
install.packages("mice")
ver()
version
RStudio.Version()
install.packages(c("VIM","mice"))
data(sleep,package = "VIM")
View(sleep)
View(sleep[which(Exp=1)])
?labels
2/3
options(digits = 2)
2/3
2/3
options()
options
options(digits = 5)
complete.cases(sleep)
sleep[complete.cases(sleep)]
sleep[complete.cases(sleep),]
nrows(sleep[complete.cases(sleep),])
nrow(sleep[complete.cases(sleep),])
na.omit(sleep)
library(mice)
?mice
imp <- mice(sleep,5,seed = 1234)
imp <- mice(sleep,seed = 1234)
imp <- mice(sleep,6,seed = 1234)
imp <- mice(sleep,seed = 1234)
fit <- with(imp,lm(Dream~Span+Gest))
fit
pooled <- pool(fit)
summary(pooled)
imp
imp$Dream
imp$imp$Dream
complete(imp,action = 3)
install.packages("ggplot2")
library(lattice)
View(singer)
histogram(~height|voice.part,data = singer,type = "percent")
histogram(~height|voice.part,data = singer,type = "density")
View(sleep)
str(sleep)
histogram(~BrainWgt|Exp+Pred,data = sleep)
histogram(~BrainWgt|Exp,data = sleep)
str(singer)
dotplot(~height|voice.part,data = singer)
dotplot(~height,data = singer)
histogram(voice.part~height,data = singer)
histogram(~height,data = singer)
library(lattice)
attach(mtcars)
View(mtcars)
str(mtcars)
View(gear)
gear <- factor(mtcars$gear,levels = c(3,4,5),labels = c("3 gears","4 gears","5 gears"))
str(mtcars)
gear
mtcars$gear
cyl <- factor(mtcars$cyl,levels = c(4,6,8),labels = c("4 cylinders","6 cylinders","8 cylinders"))
str(cyl)
densityplot(~mpg)
bwplot(cyl~mpg|gear)
?bwplot
library(lattice)
attach(mtcars)
str(cyl)
str(gear)
bwplot(cyl~mpg|gear)
xyplot(mpg~wt|cyl*gear)
xyplot(mpg~wt|cyl)
xyplot(mpg~wt|cyl*gear)
cloud(mpg~wt*qsec|cyl)
cloud(mpg~wt*qsec|cyl*gear)
xyplot.ts(mpg~wt|cyl*gear)
dotplot(cyl~mpg|gear)
splom(mtcars[c(1,3,4,5,6)])
detach(mtcars)
mygraph <- densityplot(~height|voice.part,data = singer)
mygraph
plot(mygraph)
update(mygraph,jitter=.05)
update(mygraph,jitter=1)
update(mygraph,jitter=.005)
install.packages("symbols")
temp <- array(1:24,c(2,3,4),dimnames = list(dim1,dim2,dim3))
dim1<-c("A1","A2")
dim2<-c("B1","B2","B3")
dim3<-c("C1","C2","C3","C4")
z<-array(1:24,c(2,3,4),dimnames=list(dim1,dim2,dim3))
z
z[1,2,3]
version()
ver()
version
install.packages("devtools")
RStudio.Version()
library(devtools)
version
exit
exit()
quit()
getwd()
memory.limit()
quit
quit()
z
library(data.table)
mtcars_dt <- data.table(mtcars)
library(data.table)
mtcars_dt <- data.table(mtcars)
mtcars_dt[1:10]
temp <- mtcars_dt[1:10]
temp <- mtcars_dt[1:10]
load("D:/R/R/.RData")
setwd("D:/R")
tmp <- copy(temp)
library(data.table)
tmp <- copy(temp)
a <- rep(c(1:3),each=3)
b
rm(b)
a <- rep(c(1:3),each=3)
load("D:/R/.RData")
rm(a,b)
a <- rep(c(1:3),each=3)
dt <- data.table(x=rep(c("a","b","c"),times=3),y=1:9,stringsAsFactors = F)
View(dt)
install.packages("dplyr")
library(dplyr)
?filter
View(mtcars_dt)
mtcars_dt[,hp]
mtcars_dt[,list(hp)]
mtcars_dt[,.(hp)]
names(mtcars_dt)
mtcars_dt[,.("hp")]
class(mtcars_dt)
mtcars_dt[,dist]
mtcars_dt[1:3,dist]
mtcars_dt[1:3,.(dist)]
library(data.table)
mtcars_dt[1:3,dist]
mtcars_dt[1:3,.(dist)]
mtcars_dt[1:3]
mtcars[1:3,list(hp)]
mtcars[1:3,list("hp")]
mtcars[1:3,.("hp")]
mtcars[1:3,.(hp)]
mtcars[1:3,hp]
is.data.table(mtcars_dt)
data(package="base")
data()
mtcars_dt[1:3,hp]
mtcars_dt[1:3,list(hp)]
mtcars_dt[1:3,list("hp")]
temp <- copy(mtcars_dt)
View(temp)
temp[,!c("hp")]
View(temp)
temp[,c("hp"):=NULL]
temp <- copy(mtcars_dt)
View(temp)
tmp <- temp[,c("hp"):=NULL]
"hp" %in% names(tmp)
"cyl" %in% names(tmp)
dt <- data.table(x=rep(c("a","b","c"),times=3),y=1:9,,z=rep(1:3,each=3),
stringsAsFactors = F)
library(data.table)
dt <- data.table(x=rep(c("a","b","c"),times=3),y=1:9,,z=rep(1:3,each=3),
stringsAsFactors = F)
dt <- data.table(x=rep(c("a","b","c"),times=3),y=1:9,
z=rep(1:3,each=3),stringsAsFactors = F)
View(dt)
dt <- data.table(x=rep(c("a","b","c"),times=3),y=1:9,z=rep(1:3,each=3),stringsAsFactors = F)
View(dt)
mtcars_dt[,1]
mtcars_dt[,.(1)]
View(mpg)
data(mpg)
install.packages("tidyverse")
search()
library(tibble)
??tibble
mpg
library(tidyverse)
View(mpg)
data(mpg)
data()
getwd()
library(ggplot2)
search()
library(tidyverse)
ggplot(mpg,aes(displ,hwt))
View(mpg)
library(ggplot2)
p <- ggplot(mtcars,aes(mpg,wt,col=cyl))+
geom_point()
p
p <- ggplot(mtcars_dt,aes(mpg,wt,col=cyl))+
geom_point()
p
class(mtcars_dt)
ggplot(mtcars_dt,aes(mpg,wt,col=cyl))+
geom_point()
p <- ggplot(mtcars,aes(mpg,wt,col=cyl))+
geom_point()
p <- ggplot(mtcars,aes(mpg,wt,col=cyl))+
geom_point()+
geom_smooth()
p
# +geom_smooth()
<<<<<<< HEAD
=======
+geom_abline()
p
library(ggplot2)
p <- ggplot(mtcars,aes(mpg,wt,col=cyl))+
geom_point()
library(tidyverse)
demo(package = "tidyr")
demo(package = "mtcars")
data()
demo(package = "mpg")
demo(package = "iris")
demo(package = "ggplot2")
library(reshape2)
remove.packages("reshape")
help(melt)
View(theta.fit)
View(theta.fit)
View(theta.predict)
View(shrinkage)
View(relweights)
p <- ggplot(mtcars,aes(mpg,wt))+
geom_point(col="blue")
# +geom_smooth()
p
geom_point(aes(col="blue")
# +geom_smooth()
p
p <- ggplot(mtcars,aes(mpg,wt))+
geom_point(aes(col="blue"))
# +geom_smooth()
p
p <- ggplot(mtcars,aes(mpg,wt))+
geom_point()  #设定散点的颜色为蓝色
# +geom_smooth()
p
# +geom_smooth()
p
p <- ggplot(mtcars,aes(mpg,wt,col=cyl))+
geom_point()  #设定散点的颜色为蓝色
# +geom_smooth()
p
ggplot(mtcars,mapping=aes(mpg,wt,col=cyl))+
geom_point()
head(melt(mtcars, id = c("mpg", "disp", "hp", "drat", "wt", "qsec", "vs", "carb")))
View(mtcars)
library(ggplot2)
ggplot(mtcars,mapping=aes(mpg,wt,col=gear))+
geom_point()
ggplot(mtcars,mapping=aes(mpg,wt,col=factor(gear)))+
geom_point()
ggplot(mtcars,mapping=aes(mpg,wt,col=factor(gear)))+
geom_point(shape=factor(crab))
View(mtcars)
ggplot(mtcars,mapping=aes(mpg,wt,col=factor(gear)))+
geom_point(shape=factor(carb))
class(mtcars)
str(mtcars)
ggplot(mtcars,mapping=aes(mpg,wt,col=factor(cyl)))+
geom_point()
ggplot()+
geom_point(aes(x = hp, y = mpg), data = mtcars, color = "red")
ggplot()+
geom_point(aes(x = hp, y = mpg), data = mtcars, color = "red")+
geom_point(aes(x = mtcars$hp, y = mtcars$disp), color = "green")
ggplot()+
geom_point(aes(x = hp, y = mpg), data = mtcars, color = "red")+
geom_point(aes(x = mtcars$hp, y = mtcars$disp), color = "green")+ #选用向量数据
geom_point(aes(x = hp, y= mpg), data = mtcars.c, color = "blue")  #选用不同的数据集
mtcars.c <- transform(mtcars, mpg = mpg^2)
geom_point(aes(x = hp, y= mpg), data = mtcars.c, color = "blue")
ggplot()+
geom_point(aes(x = hp, y = mpg), data = mtcars, color = "red")+
geom_point(aes(x = mtcars$hp, y = mtcars$disp), color = "green")+ #选用向量数据
geom_point(aes(x = hp, y= mpg), data = mtcars.c, color = "blue")
sessionInfo(package = "ggplot2")
library(ggplot2)
ggplot()
+
geom_point(aes(x = hp, y = mpg), data = mtcars, color = "red")+
geom_point(aes(x = hp, y = mpg), data = mtcars, color = "red")
ggplot()+
geom_point(aes(x = hp, y = mpg), data = mtcars, color = "red")
ggplot()+
geom_point(aes(x = hp, y = mpg), data = mtcars, color = "red")+
geom_point(aes(x = mtcars$hp, y = mtcars$disp), color = "green")
ggplot()+
geom_point(aes(x = hp, y = mpg), data = mtcars, color = "red")+
geom_point(aes(x = mtcars$hp, y = mtcars$disp), color = "green")+
#选用向量数据
geom_point(aes(x = hp, y= mpg), data = mtcars.c, color = "blue")
ggplot()+
geom_point(aes(x = mtcars$hp, y = mtcars$disp), color = "green")
ggplot()+
geom_point(aes(x = mtcars$hp, y = mtcars$disp, color = "green"))
ggplot()+
geom_point(aes(x = mtcars$hp, y = mtcars$disp), color = "green")
ggplot(data=mtcars,aes(color = factor(cyl)))+
geom_point(aes(x = mtcars$hp, y = mtcars$disp))
help("mtcars")
ggplot(data=mtcars,aes(color = factor(hp)))+
geom_point(aes(x = mtcars$hp, y = mtcars$disp))
View(mtcars)
ggplot(aes(col=factor(cyl)))+
geom_point(aes(x = hp, y = mpg), data = mtcars, color = "red")
ggplot(aes(col=factor(cyl)))+
geom_point(aes(x = hp, y = mpg), data = mtcars)
ggplot(aes(col=factor(cyl)))
ggplot(data=mtcars,aes(col=factor(cyl)))+
geom_point(aes(x = hp, y = mpg), data = mtcars)
ggplot(data=mtcars,aes(col=factor(cyl)))+
geom_point(aes(x = hp, y = mpg,alpha=qsec), data = mtcars)
ggplot(data=mtcars,aes(col=factor(cyl)))+
geom_point(aes(x = hp, y = mpg,shape=factor(gear)), data = mtcars)
ggplot(mtcars, aes(wt, mpg))+
geom_point(color = "grey50", size = 5)
ggplot(mtcars, aes(wt, mpg))+
geom_point(color = "grey50", size = 5) +
geom_point(aes(color = qsec), size = 4)
movies
A <- c(1, 2, 3, 4, 5, 6, 7, 8)
B <- c(2, 10, 11, 5, 6, 1, 10, 20)
ggplot() + geom_histogram(aes(x = A, y = B))
ggplot() + geom_histogram(aes(x = A, y = B), stat = "identity")
rm(A,B)
ggplot(mtcars,mapping=aes(mpg,wt,col=factor(cyl)))+
geom_point()
ggplot(mtcars,mapping=aes(mpg,wt,col=cyl))+
geom_point()
ggplot(mtcars,mapping=aes(mpg,wt,col=factor(cyl)))+
geom_point()
ggplot(data=mtcars)+
geom_point(aes(x = hp, y = mpg), data = mtcars,col=cyl)
ggplot(data=mtcars)+
geom_point(aes(x = hp, y = mpg), data = mtcars,col=cyl)+
geom_smooth()
ggplot(data=mtcars,aes(x = hp, y = mpg),)+
geom_point( data = mtcars,col=cyl)+
geom_smooth()
ggplot(data=mtcars,aes(x = hp, y = mpg,col=cyl))+
geom_point( data = mtcars)+
geom_smooth()
ggplot(data=mtcars,aes(x = hp, y = mpg,col=cyl))+
geom_point( data = mtcars)+
stat_smooth()
ggplot(data=mtcars,aes(x = hp, y = mpg,col=cyl))+
geom_point( data = mtcars)+
stat_smooth(level = .99)
ggplot(data=mtcars,aes(x = hp, y = mpg,col=cyl))+
geom_point( data = mtcars)+
stat_smooth(level = .9)
ggplot(data=mtcars,aes(x = hp, y = mpg,col=cyl))+
geom_point( data = mtcars)+
stat_smooth(level = .9,method = "gam")
help("poly")
?require
UseMethod("median")
methods(median)
median.default
methods(print)
methods(ggplot2)
methods(ggplot)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(alpha = year))
library(ggplot2)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(alpha = year))
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(alpha = year)) + scale_alpha("cylinders")
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(alpha = year))+ scale_alpha(range = c(0.4, 0.8))
ggplot()+
geom_point(aes(x = hp, y = mpg), data = mtcars, color = factor(cyl))
test <- 0
for(i in 1:9){
j <- i+2
test[i+1] <- test[i]+3
k <- i
}
k
test
i
test <- 0
test
test+3
test[2]+3
rm(i,j,k,test)
source('G:/R/RfuntionTrial/ggplot2-training.R', encoding = 'UTF-8')
source('G:/R/RfuntionTrial/ggplot2-training.R', encoding = 'UTF-8')
a <- ggplot(mtcars, aes(factor(cyl)))
a + geom_bar()
a + geom_bar(aes(fill = factor(cyl)))
rm(a)
gc()
mtcars[cyl>4,]
str(mtcars)
mtcars[which(cyl>4),]
which(LETTERS == "R")
head(mtcars[which(cyl=4)])
head(mtcars[which(cyl==4)])
mtcars[which(cyl==4)]
mtcars[which(cyl==4),]
mtcars[which(mtcars$cyl==4),]
mtcars[cyl=4]
mtcars[cyl==4]
mtcars[cyl==4,]
mtcars_dt[cyl==4]
library(data.table)
mtcars_dt[cyl==4]
class(mtcars)
mtcars[cyl=4,]
mtcars[cyl==4,]
mtcars[cyl==4]
mtcars[cyl=4]
mtcars[mtcars$cyl=4]
mtcars[mtcars$cyl==4]
mtcars[mtcars$cyl==4,]
ggplot(data=mtcars,aes(col=factor(cyl)))+
geom_point(aes(x = hp, y = mpg,shape=factor(gear)), data = mtcars)+
geom_abline()
ggplot(data=mtcars,aes(col=factor(cyl)))+
geom_point(aes(x = hp, y = mpg,shape=factor(gear)), data = mtcars)+
geom_line()
ggplot(data=mtcars,aes(col=factor(cyl)))+
geom_point(aes(x = hp, y = mpg,shape=factor(gear)), data = mtcars)+
geom_line()
ggplot(data=mtcars,aes(col=factor(cyl)))+
geom_point(aes(x = hp, y = mpg,shape=factor(gear)), data = mtcars)+
geom_abline()
ggplot(data=mtcars,aes(col=factor(cyl)))+
geom_line(aes(x = hp, y = mpg,shape=factor(gear)), data = mtcars)
