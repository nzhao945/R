mtcars_dt[mtcars_dt$cyl==4,]
names(mtcars)
rownames(mtcars)
colnames(mtcars)
all.equal(names(mtcars),colnames(mtcars))
paste(letters[1:6],1:6,sep="-")
paste("abc", "efg", "hijk", sep = "-",collapse = ";")
paste(c("abc", "efg", "hijk"),1:3, sep = "-",collapse = ";")
x <-rnorm(10,10,1)
y <-rnorm(10,11,1)
cat (sprintf("x has %d elements:\n", length(x)))
x
print(x)
sprintf("x has %d elements:\n", length(x))
rm(x,y)
mtcars[which(cyl>4)]
mtcars[which(cyl>4),]
mtcars[which(mtcars$cyl>4)]
mtcars[which(mtcars$cyl>4),]
mtcars[cyl==4,]
mtcars[cyl=4,]
mtcars[cyl=4]
mtcars[cyl==4]
library(data.table)
fread(header = T,stringsAsFactors = F,input = "train.csv")
fread(header = T,stringsAsFactors = F,file = "G:\R\kaggle_data\Titanic Machine Learning from Disaster\train.csv")
fread(header = T,stringsAsFactors = F,file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/train.csv")
titanic_train <- fread(header = T,stringsAsFactors = F,file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/train.csv")
str(titanic_train)
class(titanic_train)
titanic_test <- fread(header = T,stringsAsFactors = F,file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/test.csv")
rm(mtcars.c)
rm(mymatrix)
rm(p,tmp,dt)
library(ggplot2)
rm(mpg)
View(titanic_test)
str(titanic_train)
View(titanic_test)
View(titanic_train)
gc()
str(titanic_train)
str(titanic_test)
library(randomForest)
train <- fread(header = T,stringsAsFactors = F,
file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/train.csv")
test <- fread(header = T,stringsAsFactors = F,
file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/test.csv")
library(data.table)
train <- fread(header = T,stringsAsFactors = F,
file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/train.csv")
test <- fread(header = T,stringsAsFactors = F,
file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/test.csv")
rm(titanic_test,titare)
rm(titanic_test,titanic_train)
is.na(train)
table(names(train),is.na(train))
View(test)
View(train)
is.null(train)
dim(train)
complete.cases(train)
library(mice)
md.pattern(train)
md.pattern(train)
is.na(train$Age)
sum(is.na(train$Age))
md.pattern(train)
sum(is.na(train$Sex))
sum(is.na(train$Parch))
train[c(62, 830), 'Fare']
train[c(62, 830), 'Fare'][1]
train[c(62, 830), 'Fare'][[1]][1]
train[c(62, 830), 'Fare'][[1]]
library(ggplot2)
ggplot(train,aes(sex,survived))
ggplot(train,aes(Sex,Survived))
library(dplyr)
train %>% group_by(Sex) %>% mutate(Survival_ratio=sum(Survived)/nrow(Survived)) %>%
ggplot(aes(sex,Survival_ratio))+geom_bar()
sum(train$Survived)
nrow(train$Survived)
train %>% group_by(Sex) %>% mutate(Survival_ratio=sum(Survived)/length(Survived)) %>%
ggplot(aes(sex,Survival_ratio))+geom_bar()
train %>% group_by(Sex) %>% mutate(Survival_ratio=sum(Survived)/length(Survived)) %>%
ggplot(aes(Sex,Survival_ratio))+geom_bar()
train %>% group_by(Sex) %>% mutate(Survival_ratio=sum(Survived)/length(Survived)) %>%
ggplot(aes(Sex\))+geom_bar()
train %>% group_by(Sex) %>% mutate(Survival_ratio=sum(Survived)/length(Survived)) %>%
ggplot(aes(Sex))+geom_bar()
train %>% group_by(Sex) %>% mutate(Survival_ratio=sum(Survived)/length(Survived)) %>%
ggplot(aes(Survival_ratio))+geom_bar()
View(train)
test$Survived <- NA
comb <- rbind(train,test)
View(comb)
library(mice)
md.pattern(train)
md.pattern(as.matrix(train))
md.pattern(train$Cabin)
nrow(is.na(train$Cabin))
nrow(!is.na(train$Cabin))
sum(is.na(train$Cabin))
is.na(head(train$Cabin,20))
sum(train$Cabin)
str(train$Cabin)
nrow(train$Cabin[train$Cabin==""])
train$Cabin[train$Cabin==""]
train$Cabin[train$Cabin]
library(data.table)
train[Cabin='']
train[Cabin=""]
train[Cabin==""]
nrow(train[Cabin==""])
nrow(train)
nrow(train[Cabin!=""])
View(train[Cabin==""])
md.pattern(train[,list(PassengerId,Cabin)])
md.pattern(train[,c("PassengerId","Cabin")])
class(train[,c("PassengerId","Cabin"))
class(train[,c("PassengerId","Cabin")])
nrow(train[Cabin==" "])
nrow(train[Cabin==""])
nrow(train[Cabin %in% " "])
nrow(train[Cabin %in% ""])
train[Cabin==""] <- NA
View(train)
train <- fread(header = T,stringsAsFactors = F,
file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/train.csv")
train$Cabin[Cabin==""] <- NA
train[Cabin=="",list(Cabin)] <- NA
train[,list(Cabin)]
train[Cabin=="",list(Cabin)]
train[Cabin=="",list(Cabin)] <- NA
train[train$Cabin=="",Cabin]
train[train$Cabin=="",Cabin] <- NA
train[train$Cabin=="",train$Cabin] <- NA
train[train$Cabin=="",train$Cabin]
train[,Cabin==""]
train[,train$Cabin==""]
View(train)
View(tuk)
nrow(train[Cabin==""])
train$Cabin[train$Cabin==""] <- NA
View(train)
md.pattern(train)
is.null(train$Cabin)
is.na(train$Cabin)
md.pattern(train)
is.na(train$Name)
train <- fread(header = T,stringsAsFactors = F,
file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/train.csv")
test <- fread(header = T,stringsAsFactors = F,
file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/test.csv")
test$Survived <- NA
comb <- rbind(train,test)
sum(is.na(train$Cabin))
sum(is.na(train$Name))
sum(is.na(train$Age))
train$Cabin[train$Cabin==""] <- NA
sum(is.na(train$Cabin))
687/891
sum(is.na(train$Fare))
sum(is.na(train$Embarked))
library(dplyr)
rm(comb)
# 合并train和test
comb <- rbind(train,test)
View(comb)
summary(train)
glimpse(train)
str(train)
train <- train %>% mutate(Survived = factor(Survived),Pclass = factor(Pclass),
Embarked = factor(Embarked),Sex = factor(Sex))
test <- test %>% mutate(Pclass = factor(Pclass),Embarked = factor(Embarked),Sex = factor(Sex))
# 合并train和test,test中不存在的列Survived会自动生成NA
comb <- rbind(train,test)
aggr(comb, prop = FALSE, combined = TRUE, numbers = TRUE, sortVars = TRUE, sortCombs = TRUE)
md.pattern(test)
md.pattern(train)
md.pattern(test)
md.pattern(comb)
view
View(nhanes)
ggplot(train, aes(Pclass, Fare, colour = Survived)) +
geom_boxplot() +
ggplot(train, aes(Pclass, Fare, colour = Survived)) +
geom_boxplot()
library(ggplot2)
ggplot(train, aes(Pclass, Fare, colour = Survived)) +
geom_boxplot()
ggplot(train, aes(Pclass, log10(Fare), colour = Survived)) +
geom_boxplot()
ggplot(train, aes(Pclass, Fare, colour = Survived)) +
geom_boxplot() + scale_y_log10()
library(data.table)
str(comb)
setDT(comb)
str(comb)
comb[is.na(Embarked)]
comb[is.na(Embarked),]
comb[is.na(Embarked)][]
comb[is.na(Embarked)][[]]
comb[is.na(Embarked)][][]
comb[,comb$Embarked==NA]
comb[,is.na(comb$Embarked)]
comb[is.na(comb$Embarked),]
is.na(comb$Embarked)
library(dplyr)
filter(comb,is.na(Embarked))
View(comb)
train <- fread(header = T,stringsAsFactors = F,na.strings = "NA"
file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/train.csv")
#导入训练集和测试集
train <- fread(header = T,stringsAsFactors = F,na.strings = "NA",
file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/train.csv")
View(train)
View(train)
train$Embarked <- factor(train$Embarked)
View(train)
sum(is.na(train$Embarked))
sum(train[Embarked==""])
sum(train[Embarked=="",])
train[Age==NA]
train[Age==NA,]
train[Age=NA]
train[Age=19]
train[Age==19]
train[Age=="NA"]
train[Age==NA]
train[is.na(Age)]
train[Embarked==""]
train[""]
train[1==""]
train$Embarked[Embarked==""]
train$Embarked[""]
train$Embarked[train$Embarked=""]
train$Embarked[train$Embarked="",]
train$Embarked[train$Embarked=="",]
train$Embarked[train$Embarked==""]
train$Embarked[train$Embarked=="C"]
train$Embarked[train$Embarked==""] <- NA
sum(is.na(train$Embarked))
tmp <- read_csv('G:/R/kaggle_data/Titanic Machine Learning from Disaster/test.csv')
tmp <- read.csv('G:/R/kaggle_data/Titanic Machine Learning from Disaster/test.csv')
View(tmp)
sum(is.na(tmp$Embarked))
tmp <- read.csv('G:/R/kaggle_data/Titanic Machine Learning from Disaster/train.csv')
sum(is.na(tmp$Embarked))
rm(tmp)
#导入训练集和测试集
train <- fread(header = T,
file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/train.csv")
View(train)
library(mice)
library(ggplot2)
train <- fread(header = T,stringsAsFactors = F,
file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/train.csv")
View(train)
train$Cabin[train$Cabin==""] <- NA
View(train)
# 发现部分缺失值并没有被读取为NA，而是""，所以作如下操作
train$Embarked[train$Embarked==""] <- NA
sum(is.na(train$Embarked))
md.pattern(train)
library(VIM)
aggr(train)
aggr(train,numbers=T)
aggr(train, prop = F)
aggr(train, prop = F, combined = T)
aggr(train, prop = F, axes=T
)
aggr(train, prop = F, number = T)
# 合并train和test,test中不存在的列Survived会自动生成NA
comb <- rbind(train,test)
aggr(comb, prop = FALSE, combined = TRUE, numbers = TRUE, sortVars = TRUE, sortCombs = TRUE)
train <- fread(header = T,stringsAsFactors = F,
file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/train.csv")
test <- fread(header = T,stringsAsFactors = F,
file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/test.csv")
# 合并train和test,test中不存在的列Survived会自动生成NA
comb <- rbind(train,test)
aggr(comb, prop = FALSE, combined = TRUE, numbers = TRUE, sortVars = TRUE, sortCombs = TRUE)
View(comb)
View(test)
# 合并train和test,test中不存在的列Survived会自动生成NA
comb <- rbind(train,test)
View(comb)
rm(comb)
# 合并train和test,test中不存在的列Survived会自动生成NA
comb <- rbind(train,test)
# 合并train和test,test中不存在的列Survived会自动生成NA
comb <- rbind(train,test)
?rbind
# 合并train和test,test中不存在的列Survived会自动生成NA
comb <- rbind(train,test,fill=NA)
# 合并train和test,test中不存在的列Survived会自动生成NA
comb <- rbind(train,test,fill=T)
view(comb)
view(comb)
View(comb)
aggr(combine, prop = FALSE, combined = TRUE, numbers = TRUE, sortVars = TRUE, sortCombs = TRUE)
aggr(comb, prop = FALSE, combined = TRUE, numbers = TRUE, sortVars = TRUE, sortCombs = TRUE)
?rbind
comb$Embarked[comb$Embarked==""] <- NA
comb$Cabin[comb$Cabin==""] <- NA
sum(nrow(comb$Pclass[comb$Pclass==""]))
sum(nrow(comb$Sex[comb$Sex==""]))
sum(nrow(comb$Fare[comb$Fare==""]))
sum(nrow(comb$Ticket[comb$Ticket==""]))
sum(nrow(comb$Embarked[comb$Ticket==""]))
sum(nrow(comb$Embarked[comb$Embarked==""]))
#缺失值可视化
aggr(comb, prop = FALSE, combined = TRUE, numbers = TRUE, sortVars = TRUE, sortCombs = TRUE)
md.pattern(trian)
md.pattern(train)
comb %>%
filter(Embarked != "Q" & Pclass == 1 & Sex == "female") %>%
group_by(Embarked, Pclass, Sex, Pclass, Parch, SibSp) %>%
summarise(count = n())
md.pattern(comb)
train[is.na(Embarked)]
train[Embarked==NA]
train[Embarked=NA]
train[train$Embarked==NA,]
train[train$Embarked=NA,]
train[is.na(train$Embarked),]
filter(train,is.na(Embarked))
sum(is.na(trian$emba))
sum(is.na(train$Embarked))
train$Embarked[train$Embarked==""] <- NA
train$Cabin[train$Cabin==""] <- NA
# 合并train和test,test中不存在的列Survived由参数fill=T生成NA
comb <- rbind(train,test, fill = T)
sum(is.na(train$Embarked))
train %>% filter(is.na(Embarked))
#缺失值可视化
aggr(train, prop = FALSE, combined = TRUE, numbers = TRUE, sortVars = TRUE, sortCombs = TRUE)
sum(is.na(train$Cabin))
md.pattern(train)
View(train)
sum(is.na(train$Embarked))
train %>% filter(is.na(Embarked))
View(comb)
#增加Title列
comb$Title <- gsub('(.*, )|(\\..*)', '', comb$Name)
table(comb$Sex,comb$Title)
library(data.table)
temp <- fread(file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/train.csv", header = T,
stringsAsFactors = F, na.strings = c("NA",""))
View(temp)
temp <- fread(file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/train.csv", header = T,
stringsAsFactors = F, na.strings = c("NA","","N/A","null"))
View(temp)
sum(is.na(temp$Embarked))
which(table(comb$Sex,comb$Title)>200)
#导入训练集和测试集,发现部分空值不能正确读取为NA，故加入参数na.strings = c("NA","")
train <- fread(header = T, stringsAsFactors = F,na.strings = c("NA","","N/A","null"),
file = "G:/R/kaggle_data/Titanic Machine Learning from Disaster/train.csv")
library(VIM)
#缺失值可视化
aggr(train, prop = FALSE, combined = TRUE, numbers = TRUE, sortVars = TRUE, sortCombs = TRUE)
nrow(na.omit(train))
table(comb$Sex,comb$Title)
View(test)
View(mygraph)
gc()
table(comb$Sex,comb$Title)
itle <- c("Capt","Col","Don","Dona","Dr","Jonkheer","Lady","Major","Rev","Sir","the Countess")
comb$Title[comb$Title == 'Mlle'] <- 'Miss'
comb$Title[comb$Title == 'Ms'] <- 'Miss'
comb$Title[comb$Title == 'Mme'] <- 'Mrs'
comb$Title[comb$Title %in% rare_title] <- 'Rare Title'
rare_title <- c("Capt","Col","Don","Dona","Dr","Jonkheer","Lady","Major","Rev","Sir","the Countess")
comb$Title[comb$Title %in% rare_title] <- 'Rare Title'
table(comb$Sex,comb$Title)
library(ggplot2)
ggplot(comb,aes(Title))
geom_bar(aes(fill=Survived))
ggplot(comb,aes(Title,fill=Survived))
geom_bar(stat = "count",position = "dodge")
ggplot(comb,aes(Title,fill=Survived))+
geom_bar(stat = "count",position = "dodge")
str(train)
train <- train %>% mutate(Survived = factor(Survived),Pclass = factor(Pclass),
Embarked = factor(Embarked),Sex = factor(Sex))
library(magrittr)
library(dplyr)
train <- train %>% mutate(Survived = factor(Survived),Pclass = factor(Pclass),
Embarked = factor(Embarked),Sex = factor(Sex))
test <- test %>% mutate(Pclass = factor(Pclass),Embarked = factor(Embarked),Sex = factor(Sex))
temp <- rbind(train,test,fill = T)
test <- test %>% mutate(Survived = "NA",Pclass = factor(Pclass),
Embarked = factor(Embarked),Sex = factor(Sex))
temp <- rbind(train,test,fill = T)
test <- test %>% mutate(Pclass = factor(Pclass),
Embarked = factor(Embarked),Sex = factor(Sex))
temp <- rbind(train,test, fill = T)
View(temp)
test <- test[,-c("Survived")]
test <- test[,-Survived]
test <- test[,-test$Survived]
test <- test[,!test$Survived]
test <- select(test,-Survived)
View(test)
temp <- rbind(train,test)
temp <- rbind(train,test,fill=NA)
temp <- rbind(train,test,fill=T)
temp <- bind_rows(test,train)
View(temp)
View(comb)
View(temp)
temp <- bind_rows(train,test)
View(temp)
temp$Title <- comb$Title
View(temp)
comb <- temp
rm
rm(temp)
gc()
###下面开始进行初步探索数据集###
table(comb$Sex,comb$Title)
ggplot(train,aes(Title,fill = Survived))
ggplot(comb[1:891],aes(Title,fill = Survived))
ggplot(comb[1:891,],aes(Title,fill = Survived))
geom_bar(stat = "count",position = "dodge")
geom_bar(stat = 'count',position = 'dodge')
ggplot(comb[1:891,],aes(Title,fill = Survived))
geom_bar(stat = "count",position = "dodge")
ggplot(comb[1:891,],aes(Title,fill = Survived))+
geom_bar(stat = "count",position = "dodge")
labs("no point")
+labs("no point")
ggplot(comb[1:891,],aes(Ticket,Fare,fill = Survived))+
geom_point()
ggplot(comb[1:891,],aes(Ticket,Fare))+
geom_point()
ggplot(comb[1:891,],aes(Ticket,Embarked))+
geom_point()
ggplot(comb[1:891,],aes(factor(Ticket),Fare))+
geom_point()
nlevels(factor(comb[1:891,]$Ticket))
load("G:/R/.RData")
rm(mymatrix)
rm(dim1)
##apply函数族
by1
##apply函数族
counts
rm(dim2,dim3,rnames,xx,yy,z,cnames,by1,by2,cells,counts)
View(relweights)
?base
??base
library(help='base')
is.R()
gc()
rm(list=ls())
# 封装fun1
fun1<-function(x){
myFUN<- function(x, c1, c2) {
c(sum(x[c1],1), mean(x[c2]))
}
apply(x,1,myFUN,c1='x1',c2=c('x1','x2'))
}
# 封装fun2
fun2<-function(x){
df<-data.frame()
for(i in 1:nrow(x)){
row<-x[i,]
df<-rbind(df,rbind(c(sum(row[1],1), mean(row))))
}
}
# 封装fun3
fun3<-function(x){
data.frame(x1=x[,1]+1,x2=rowMeans(x))
}
# 生成数据集
x <- cbind(x1=3, x2 = c(400:1, 2:500))
load("G:/R/.RData")
load("G:/R/.RData")
load("C:/Users/nzhao/Desktop/RData")
load("C:/Users/nzhao/Desktop/RData")
View(fun1)
rm(z,yy,xx,t,rnames,dim1:dim3,counts,cnames,cells,by1:2,dt)
rm(z,yy,xx,t,rnames,dim1:dim3,counts,cnames,cells,by1,by2,dt)
rm(z,yy,xx,t,rnames,dim1,dim2,dim3,counts,cnames,cells,by1,by2,dt)
train <- train %>% mutate(Survived = factor(Survived),Pclass = factor(Pclass),
Embarked = factor(Embarked),Sex = factor(Sex))
library(magrittr)
train <- train %>% mutate(Survived = factor(Survived),Pclass = factor(Pclass),
Embarked = factor(Embarked),Sex = factor(Sex))
library(dplyr)
train <- train %>% mutate(Survived = factor(Survived),Pclass = factor(Pclass),
Embarked = factor(Embarked),Sex = factor(Sex))
test <- test %>% mutate(Pclass = factor(Pclass),
Embarked = factor(Embarked),Sex = factor(Sex))
# 合并train和test,自动补全test中的Survived=NA
comb <- dplyr::bind_rows(train,test)
View(comb)
rare_title <- c("Capt","Col","Don","Dona","Dr","Jonkheer","Lady","Major","Rev","Sir","the Countess")
comb$Title[comb$Title == 'Mlle'] <- 'Miss'
comb$Title[comb$Title == 'Ms'] <- 'Miss'
comb$Title[comb$Title == 'Mme'] <- 'Mrs'
comb$Title[comb$Title %in% rare_title] <- 'Rare Title'
#增加Title列
comb$Title <- gsub('(.*, )|(\\..*)', '', comb$Name)
rare_title <- c("Capt","Col","Don","Dona","Dr","Jonkheer","Lady","Major","Rev","Sir","the Countess")
comb$Title[comb$Title == 'Mlle'] <- 'Miss'
comb$Title[comb$Title == 'Ms'] <- 'Miss'
comb$Title[comb$Title == 'Mme'] <- 'Mrs'
comb$Title[comb$Title %in% rare_title] <- 'Rare Title'
rm(mymatrix)
